{"ast":null,"code":"var _jsxFileName = \"/Users/Anshu/Desktop/py/llamaproject/llamaproject-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { fetchEventSource } from '@microsoft/fetch-event-source';\nimport Header from './components/Header';\nimport ChatWindow from './components/ChatWindow';\nimport ChatInput from './components/ChatInput';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst App = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [messages, setMessages] = useState([]);\n  const appendMessage = (chunk, sources = []) => {\n    setMessages(prev => {\n      const last = prev[prev.length - 1];\n      if (!last || last.isUser) {\n        return [...prev, {\n          message: chunk,\n          isUser: false,\n          sources\n        }];\n      }\n      return [...prev.slice(0, -1), {\n        ...last,\n        message: last.message + chunk,\n        sources: last.sources ? [...last.sources, ...sources] : sources\n      }];\n    });\n  };\n  const handleReceiveMessage = data => {\n    const parsed = JSON.parse(data);\n    if (parsed.answer) appendMessage(parsed.answer.content);\n    if (parsed.docs) appendMessage('', parsed.docs.map(doc => doc.metadata.source));\n  };\n  const handleSendMessage = async message => {\n    if (!message) return;\n    setInputValue('');\n    setMessages(prev => [...prev, {\n      message,\n      isUser: true\n    }]);\n    await fetchEventSource(`${BACKEND_URL}/rag/stream`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        input: {\n          question: message\n        }\n      }),\n      onmessage(event) {\n        if (event.event === 'data') handleReceiveMessage(event.data);\n      }\n    });\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage(inputValue.trim());\n    }\n  };\n  const formatSource = src => src.split('/').pop() || '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-grow container mx-auto p-4 flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(ChatWindow, {\n        messages: messages,\n        formatSource: formatSource\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        inputValue: inputValue,\n        onInputChange: e => setInputValue(e.target.value),\n        onSend: () => handleSendMessage(inputValue.trim()),\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eWo+kl8Gtoyyghyz4XClkXtXx2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchEventSource","Header","ChatWindow","ChatInput","Footer","jsxDEV","_jsxDEV","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","App","_s","inputValue","setInputValue","messages","setMessages","appendMessage","chunk","sources","prev","last","length","isUser","message","slice","handleReceiveMessage","data","parsed","JSON","parse","answer","content","docs","map","doc","metadata","source","handleSendMessage","method","headers","body","stringify","input","question","onmessage","event","handleKeyPress","e","key","shiftKey","preventDefault","trim","formatSource","src","split","pop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onInputChange","target","value","onSend","onKeyPress","_c","$RefreshReg$"],"sources":["/Users/Anshu/Desktop/py/llamaproject/llamaproject-frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { fetchEventSource } from '@microsoft/fetch-event-source';\n\nimport Header from './components/Header';\nimport ChatWindow from './components/ChatWindow';\nimport ChatInput from './components/ChatInput';\nimport Footer from './components/Footer';\n\ninterface Message {\n  message: string;\n  isUser: boolean;\n  sources?: string[];\n}\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\n\nconst App: React.FC = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  const appendMessage = (chunk: string, sources: string[] = []) => {\n    setMessages(prev => {\n      const last = prev[prev.length - 1];\n      if (!last || last.isUser) {\n        return [...prev, { message: chunk, isUser: false, sources }];\n      }\n      return [\n        ...prev.slice(0, -1),\n        {\n          ...last,\n          message: last.message + chunk,\n          sources: last.sources ? [...last.sources, ...sources] : sources,\n        },\n      ];\n    });\n  };\n\n  const handleReceiveMessage = (data: string) => {\n    const parsed = JSON.parse(data);\n    if (parsed.answer) appendMessage(parsed.answer.content);\n    if (parsed.docs) appendMessage('', parsed.docs.map((doc: any) => doc.metadata.source));\n  };\n\n  const handleSendMessage = async (message: string) => {\n    if (!message) return;\n    setInputValue('');\n    setMessages(prev => [...prev, { message, isUser: true }]);\n\n    await fetchEventSource(`${BACKEND_URL}/rag/stream`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ input: { question: message } }),\n      onmessage(event) {\n        if (event.event === 'data') handleReceiveMessage(event.data);\n      },\n    });\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage(inputValue.trim());\n    }\n  };\n\n  const formatSource = (src: string) => src.split('/').pop() || '';\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 flex flex-col\">\n      <Header />\n      <main className=\"flex-grow container mx-auto p-4 flex-col\">\n        <ChatWindow messages={messages} formatSource={formatSource} />\n        <ChatInput\n          inputValue={inputValue}\n          onInputChange={e => setInputValue(e.target.value)}\n          onSend={() => handleSendMessage(inputValue.trim())}\n          onKeyPress={handleKeyPress}\n        />\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}